local Players=game:GetService("Players")
local RunService=game:GetService("RunService")
local UIS=game:GetService("UserInputService")
local Workspace=game:GetService("Workspace")
local LocalPlayer=Players.LocalPlayer
local Camera=Workspace.CurrentCamera
local tool=Instance.new("Tool")
tool.RequiresHandle=false
tool.Name="Telekinesis"
tool.Parent=LocalPlayer.Backpack
local parts={}
local function forceOwnership(part)
	pcall(function()
		if part.SetNetworkOwner then
			part:SetNetworkOwner(LocalPlayer)
		end
	end)
end
local function getTarget()
	local params=RaycastParams.new()
	params.FilterDescendantsInstances={LocalPlayer.Character}
	params.FilterType=Enum.RaycastFilterType.Blacklist
	local result=Workspace:Raycast(Camera.CFrame.Position,Camera.CFrame.LookVector*500,params)
	return result and result.Instance
end
local function initPart(part)
	if not parts[part] then
		parts[part]={grabbed=false,frozen=false,distance=5,grabMover=nil,frozenMover=nil}
	end
end
local function grabPart(part)
	initPart(part)
	local state=parts[part]
	if state.frozen or state.grabbed then return end
	forceOwnership(part)
	local bv=Instance.new("BodyVelocity")
	bv.MaxForce=Vector3.new(1e6,1e6,1e6)
	bv.P=2000
	bv.Velocity=Vector3.new()
	bv.Parent=part
	local bg=Instance.new("BodyGyro")
	bg.MaxTorque=Vector3.new(1e6,1e6,1e6)
	bg.P=3000
	bg.D=500
	bg.CFrame=part.CFrame
	bg.Parent=part
	state.grabbed=true
	state.grabMover={bv=bv,bg=bg}
end
local function releasePart(part,freeze)
	local state=parts[part]
	if not state or not state.grabbed then return end
	if state.grabMover then
		state.grabMover.bv:Destroy()
		state.grabMover.bg:Destroy()
		state.grabMover=nil
	end
	if freeze then
		state.frozen=true
		local bp=Instance.new("BodyPosition")
		bp.MaxForce=Vector3.new(1e6,1e6,1e6)
		bp.P=3000
		bp.D=500
		bp.Position=part.Position
		bp.Parent=part
		local bg=Instance.new("BodyGyro")
		bg.MaxTorque=Vector3.new(1e6,1e6,1e6)
		bg.P=3000
		bg.D=500
		bg.CFrame=part.CFrame
		bg.Parent=part
		state.frozenMover={bp=bp,bg=bg}
	end
	state.grabbed=false
end
local function toggleFreeze(part)
	initPart(part)
	local state=parts[part]
	if state.frozen then
		state.frozen=false
		if state.frozenMover then
			state.frozenMover.bp:Destroy()
			state.frozenMover.bg:Destroy()
			state.frozenMover=nil
		end
	else
		state.frozen=true
		if state.grabbed then
			releasePart(part,false)
		end
		local bp=Instance.new("BodyPosition")
		bp.MaxForce=Vector3.new(1e6,1e6,1e6)
		bp.P=3000
		bp.D=500
		bp.Position=part.Position
		bp.Parent=part
		local bg=Instance.new("BodyGyro")
		bg.MaxTorque=Vector3.new(1e6,1e6,1e6)
		bg.P=3000
		bg.D=500
		bg.CFrame=part.CFrame
		bg.Parent=part
		state.frozenMover={bp=bp,bg=bg}
	end
end
UIS.InputBegan:Connect(function(input,gp)
	if gp then return end
	if tool.Parent==LocalPlayer.Backpack then return end
	local target=getTarget()
	if input.UserInputType==Enum.UserInputType.MouseButton1 then
		if target then grabPart(target) end
	elseif input.KeyCode==Enum.KeyCode.R then
		if target then toggleFreeze(target) end
	elseif input.KeyCode==Enum.KeyCode.T then
		if target and parts[target] and parts[target].grabbed then
			target.AssemblyLinearVelocity=Camera.CFrame.LookVector*200
			target.AssemblyAngularVelocity=Vector3.new()
			releasePart(target,false)
		end
	elseif input.KeyCode==Enum.KeyCode.E then
		for part,state in pairs(parts) do
			if state.grabbed then state.distance=state.distance+1 end
		end
	elseif input.KeyCode==Enum.KeyCode.Q then
		for part,state in pairs(parts) do
			if state.grabbed then state.distance=math.max(2,state.distance-1) end
		end
	end
end)
UIS.InputEnded:Connect(function(input,gp)
	if gp then return end
	if tool.Parent==LocalPlayer.Backpack then return end
	if input.UserInputType==Enum.UserInputType.MouseButton1 then
		for part,state in pairs(parts) do
			if state.grabbed then releasePart(part,false) end
		end
	end
end)
RunService.Heartbeat:Connect(function()
	for part,state in pairs(parts) do
		if state.frozen and state.frozenMover then
			state.frozenMover.bp.Position=part.Position
			state.frozenMover.bg.CFrame=part.CFrame
		elseif state.grabbed and state.grabMover then
			forceOwnership(part)
			local targetPos=Camera.CFrame.Position+Camera.CFrame.LookVector*state.distance
			local dir=targetPos-part.Position
			state.grabMover.bv.Velocity=dir*10
			state.grabMover.bg.CFrame=CFrame.new(part.Position,targetPos)
		end
	end
end)
tool.Unequipped:Connect(function()
	for part,state in pairs(parts) do
		if state.grabbed then releasePart(part,false) end
	end
end)
